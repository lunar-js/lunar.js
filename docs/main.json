{
  "meta": { "generator": "0.11.1", "format": 20, "date": 1658568350584 },
  "custom": {
    "general": {
      "name": "General",
      "files": {
        "welcome": {
          "name": "Welcome",
          "type": "md",
          "content": "<div align=\"center\">\n    <br />\n    <p>\n        <a href=\"https://www.lunarjs.com\" target=\"_blank\"><img src=\"./img/lunar.png\" width='546'></a>\n    </p>\n    <p>\n        <a href=\"https://www.npmjs.com/package/lunarjs-discord\"><img src=\"https://img.shields.io/npm/v/lunarjs-discord.svg?maxAge=3600\" alt=\"npm version\" /></a>\n        <a href=\"https://www.npmjs.com/package/lunarjs-discord\"><img src=\"https://img.shields.io/npm/dt/lunarjs-discord.svg?maxAge=3600\" alt=\"npm downloads\" /></a>\n        <a href=\"https://github.com/TheDevYellowy/lunar.js/actions\"><img src=\"https://github.com/TheDevYellowy/lunar.js/actions/workflows/test.yml/badge.svg\" alt=\"Tests status\" /></a>\n    </p>\n</div>\n\n**INFO** <br />\nThis is currently a placeholder while I code the acutal wrapper (7/17/2022)\n\n## About\n\nA discord selfbot api wrapper heavily based on Discum and Discord.js\n\n<br />\n\n## Installation\n\n**Node.js >= 16.9.0 is required**\n\n```sh-session\nnpm install lunarjs-discord\nyarn add lunarjs-discord\n```\n",
          "path": "README.md"
        }
      }
    }
  },
  "classes": [
    {
      "name": "DiscordAPIError",
      "description": "Represents an error from the Discord API.",
      "extends": [[["Error"]]],
      "props": [
        {
          "name": "method",
          "description": "The HTTP method used for the request",
          "type": [[["string"]]],
          "meta": { "line": 18, "file": "DiscordAPIError.js", "path": "src/REST" }
        },
        {
          "name": "path",
          "description": "The path of the request relative to the HTTP endpoint",
          "type": [[["string"]]],
          "meta": { "line": 24, "file": "DiscordAPIError.js", "path": "src/REST" }
        },
        {
          "name": "code",
          "description": "HTTP error code returned by Discord",
          "type": [[["number"]], [["string"]]],
          "meta": { "line": 30, "file": "DiscordAPIError.js", "path": "src/REST" }
        },
        {
          "name": "httpStatus",
          "description": "The HTTP status code",
          "type": [[["number"]]],
          "meta": { "line": 36, "file": "DiscordAPIError.js", "path": "src/REST" }
        },
        {
          "name": "captcha",
          "description": "Captcha response data if the request requires a captcha",
          "type": [[["Captcha"]], [["null"]]],
          "meta": { "line": 51, "file": "DiscordAPIError.js", "path": "src/REST" }
        },
        {
          "name": "requestData",
          "description": "The data associated with the request that caused this error",
          "type": [[["HTTPErrorData"]]],
          "meta": { "line": 57, "file": "DiscordAPIError.js", "path": "src/REST" }
        }
      ],
      "methods": [
        {
          "name": "flattenErrors",
          "description": "Flattens an errors object returned from the API into an array.",
          "scope": "static",
          "access": "private",
          "params": [
            { "name": "obj", "description": "Discord errors object", "type": [[["APIError"]]] },
            {
              "name": "key",
              "description": "Used internally to determine key names of nested fields",
              "optional": true,
              "type": [[["string"]]]
            }
          ],
          "returns": [
            [
              ["Array", "<"],
              ["string", ">"]
            ]
          ],
          "meta": { "line": 70, "file": "DiscordAPIError.js", "path": "src/REST" }
        }
      ],
      "meta": { "line": 7, "file": "DiscordAPIError.js", "path": "src/REST" }
    },
    {
      "name": "HTTPError",
      "description": "Represents an HTTP error from a request.",
      "extends": [[["Error"]]],
      "props": [
        {
          "name": "name",
          "description": "The name of the error",
          "type": [[["string"]]],
          "meta": { "line": 15, "file": "HTTPError.js", "path": "src/REST" }
        },
        {
          "name": "code",
          "description": "HTTP error code returned from the request",
          "type": [[["number"]]],
          "meta": { "line": 21, "file": "HTTPError.js", "path": "src/REST" }
        },
        {
          "name": "method",
          "description": "The HTTP method used for the request",
          "type": [[["string"]]],
          "meta": { "line": 27, "file": "HTTPError.js", "path": "src/REST" }
        },
        {
          "name": "path",
          "description": "The path of the request relative to the HTTP endpoint",
          "type": [[["string"]]],
          "meta": { "line": 33, "file": "HTTPError.js", "path": "src/REST" }
        },
        {
          "name": "requestData",
          "description": "The data associated with the request that caused this error",
          "type": [[["HTTPErrorData"]]],
          "meta": { "line": 54, "file": "HTTPError.js", "path": "src/REST" }
        }
      ],
      "meta": { "line": 7, "file": "HTTPError.js", "path": "src/REST" }
    },
    {
      "name": "RateLimitError",
      "description": "Represents a RateLimit error from a request.",
      "extends": [[["Error"]]],
      "props": [
        {
          "name": "name",
          "description": "The name of the error",
          "type": [[["string"]]],
          "meta": { "line": 15, "file": "RateLimitError.js", "path": "src/REST" }
        },
        {
          "name": "timeout",
          "description": "Time until this rate limit ends, in milliseconds",
          "type": [[["number"]]],
          "meta": { "line": 21, "file": "RateLimitError.js", "path": "src/REST" }
        },
        {
          "name": "method",
          "description": "The HTTP method used for the request",
          "type": [[["string"]]],
          "meta": { "line": 27, "file": "RateLimitError.js", "path": "src/REST" }
        },
        {
          "name": "path",
          "description": "The path of the request relative to the HTTP endpoint",
          "type": [[["string"]]],
          "meta": { "line": 33, "file": "RateLimitError.js", "path": "src/REST" }
        },
        {
          "name": "route",
          "description": "The route of the request relative to the HTTP endpoint",
          "type": [[["string"]]],
          "meta": { "line": 39, "file": "RateLimitError.js", "path": "src/REST" }
        },
        {
          "name": "global",
          "description": "Whether this rate limit is global",
          "type": [[["boolean"]]],
          "meta": { "line": 45, "file": "RateLimitError.js", "path": "src/REST" }
        },
        {
          "name": "limit",
          "description": "The maximum amount of requests of this endpoint",
          "type": [[["number"]]],
          "meta": { "line": 51, "file": "RateLimitError.js", "path": "src/REST" }
        }
      ],
      "meta": { "line": 7, "file": "RateLimitError.js", "path": "src/REST" }
    }
  ],
  "interfaces": [],
  "typedefs": [
    {
      "name": "Captcha",
      "type": [[["Object"]]],
      "props": [
        {
          "name": "captcha_key",
          "description": "['message']",
          "type": [
            [
              ["Array", "<"],
              ["string", ">"]
            ]
          ]
        },
        { "name": "captcha_sitekey", "description": "Captcha code ???", "type": [[["string"]]] },
        { "name": "captcha_service", "description": "hcaptcha", "type": [[["string"]]] },
        { "name": "captcha_rqdata", "optional": true, "type": [[["string"]]] },
        { "name": "captcha_rqtoken", "optional": true, "type": [[["string"]]] }
      ],
      "meta": { "line": 38, "file": "DiscordAPIError.js", "path": "src/REST" }
    },
    {
      "name": "HTTPErrorData",
      "description": "The HTTP data that was sent to Discord",
      "type": [[["Object"]]],
      "props": [
        { "name": "json", "description": "The JSON data that was sent", "type": [["*"]] },
        {
          "name": "files",
          "description": "The files that were sent with this request, if any",
          "type": [
            [
              ["Array", "<"],
              ["HTTPAttachmentData", ">"]
            ]
          ]
        }
      ],
      "meta": { "line": 35, "file": "HTTPError.js", "path": "src/REST" }
    },
    {
      "name": "HTTPAttachmentData",
      "description": "The attachment data that is sent to Discord",
      "type": [[["Object"]]],
      "props": [
        {
          "name": "attachment",
          "description": "The source of this attachment data",
          "type": [[["string"]], [["Buffer"]], [["Stream"]]]
        },
        { "name": "name", "description": "The file name", "type": [[["string"]]] },
        { "name": "file", "description": "The file buffer", "type": [[["Buffer"]], [["Stream"]]] }
      ],
      "meta": { "line": 42, "file": "HTTPError.js", "path": "src/REST" }
    },
    {
      "name": "InvalidreqWarningData",
      "type": [[["Object"]]],
      "props": [
        {
          "name": "count",
          "description": "Number of invalid reqs that have been made in the window",
          "type": [[["number"]]]
        },
        {
          "name": "remainingTime",
          "description": "Time in milliseconds remaining before the count resets",
          "type": [[["number"]]]
        }
      ],
      "meta": { "line": 226, "file": "RequestHandler.js", "path": "src/REST" }
    },
    {
      "name": "WSCodes",
      "description": "The types of WebSocket error codes:\n* 1000: WS_CLOSE_REQUESTED\n* 1011: INTERNAL_ERROR\n* 4004: TOKEN_INVALID\n* 4010: SHARDING_INVALID\n* 4011: SHARDING_REQUIRED\n* 4013: INVALID_INTENTS\n* 4014: DISALLOWED_INTENTS",
      "type": [
        [
          ["Object", "<"],
          ["number", ", "],
          ["string", ">"]
        ]
      ],
      "meta": { "line": 29, "file": "Constants.js", "path": "src/util" }
    },
    {
      "name": "Status",
      "description": "The current status of the client. Here are the available statuses:\n* READY: 0\n* CONNECTING: 1\n* RECONNECTING: 2\n* IDLE: 3\n* NEARLY: 4\n* DISCONNECTED: 5\n* WAITING_FOR_GUILDS: 6\n* IDENTIFYING: 7\n* RESUMING: 8",
      "type": [
        [
          ["Object", "<"],
          ["string", ", "],
          ["number", ">"]
        ]
      ],
      "meta": { "line": 50, "file": "Constants.js", "path": "src/util" }
    },
    {
      "name": "Opcodes",
      "description": "The Opcodes sent to the Gateway:\n* DISPATCH: 0\n* HEARTBEAT: 1\n* IDENTIFY: 2\n* STATUS_UPDATE: 3\n* VOICE_STATE_UPDATE: 4\n* VOICE_GUILD_PING: 5\n* RESUME: 6\n* RECONNECT: 7\n* REQUEST_GUILD_MEMBERS: 8\n* INVALID_SESSION: 9\n* HELLO: 10\n* HEARTBEAT_ACK: 11\n* GUILD_SYNC: 12 [Unused]\n* DM_UPDATE: 13 #  Send => used to get dm features\n* LAZY_REQUEST: 14 #  Send => discord responds back with GUILD_MEMBER_LIST_UPDATE type SYNC...\n* LOBBY_CONNECT: 15\n* LOBBY_DISCONNECT: 16\n* LOBBY_VOICE_STATE_UPDATE: 17 #  Receive\n* STREAM_CREATE: 18\n* STREAM_DELETE: 19\n* STREAM_WATCH: 20\n* STREAM_PING: 21 #  Send\n* STREAM_SET_PAUSED: 22\n* REQUEST_APPLICATION_COMMANDS: 24",
      "type": [
        [
          ["Object", "<"],
          ["string", ", "],
          ["number", ">"]
        ]
      ],
      "meta": { "line": 75, "file": "Constants.js", "path": "src/util" }
    },
    {
      "name": "Events",
      "description": "The types of events emitted by the Client:\n* RATE_LIMIT: rateLimit\n* INVALID_REQUEST_WARNING: invalidRequestWarning\n* API_RESPONSE: apiResponse\n* API_REQUEST: apiRequest\n* CLIENT_READY: ready\n* APPLICATION_COMMAND_AUTOCOMPLETE_RESPONSE: applicationCommandAutocompleteResponse\n* APPLICATION_COMMAND_CREATE: applicationCommandCreate (deprecated)\n* APPLICATION_COMMAND_DELETE: applicationCommandDelete (deprecated)\n* APPLICATION_COMMAND_UPDATE: applicationCommandUpdate (deprecated)\n* CALL_CREATE: callCreate\n* CALL_DELETE: callDelete\n* CALL_UPDATE: callUpdate\n* GUILD_CREATE: guildCreate\n* GUILD_DELETE: guildDelete\n* GUILD_UPDATE: guildUpdate\n* GUILD_UNAVAILABLE: guildUnavailable\n* GUILD_MEMBER_ADD: guildMemberAdd\n* GUILD_MEMBER_REMOVE: guildMemberRemove\n* GUILD_MEMBER_UPDATE: guildMemberUpdate\n* GUILD_MEMBER_AVAILABLE: guildMemberAvailable\n* GUILD_MEMBERS_CHUNK: guildMembersChunk\n* GUILD_INTEGRATIONS_UPDATE: guildIntegrationsUpdate\n* GUILD_ROLE_CREATE: roleCreate\n* GUILD_ROLE_DELETE: roleDelete\n* INVITE_CREATE: inviteCreate\n* INVITE_DELETE: inviteDelete\n* GUILD_ROLE_UPDATE: roleUpdate\n* GUILD_EMOJI_CREATE: emojiCreate\n* GUILD_EMOJI_DELETE: emojiDelete\n* GUILD_EMOJI_UPDATE: emojiUpdate\n* GUILD_BAN_ADD: guildBanAdd\n* GUILD_BAN_REMOVE: guildBanRemove\n* CHANNEL_CREATE: channelCreate\n* CHANNEL_DELETE: channelDelete\n* CHANNEL_UPDATE: channelUpdate\n* CHANNEL_PINS_UPDATE: channelPinsUpdate\n* MESSAGE_CREATE: messageCreate\n* MESSAGE_DELETE: messageDelete\n* MESSAGE_UPDATE: messageUpdate\n* MESSAGE_BULK_DELETE: messageDeleteBulk\n* MESSAGE_REACTION_ADD: messageReactionAdd\n* MESSAGE_REACTION_REMOVE: messageReactionRemove\n* MESSAGE_REACTION_REMOVE_ALL: messageReactionRemoveAll\n* MESSAGE_REACTION_REMOVE_EMOJI: messageReactionRemoveEmoji\n* THREAD_CREATE: threadCreate\n* THREAD_DELETE: threadDelete\n* THREAD_UPDATE: threadUpdate\n* THREAD_LIST_SYNC: threadListSync\n* THREAD_MEMBER_UPDATE: threadMemberUpdate\n* THREAD_MEMBERS_UPDATE: threadMembersUpdate\n* USER_UPDATE: userUpdate\n* PRESENCE_UPDATE: presenceUpdate\n* VOICE_SERVER_UPDATE: voiceServerUpdate\n* VOICE_STATE_UPDATE: voiceStateUpdate\n* TYPING_START: typingStart\n* WEBHOOKS_UPDATE: webhookUpdate\n* INTERACTION_CREATE: interactionCreate\n* ERROR: error\n* WARN: warn\n* DEBUG: debug\n* CACHE_SWEEP: cacheSweep\n* SHARD_DISCONNECT: shardDisconnect\n* SHARD_ERROR: shardError\n* SHARD_RECONNECTING: shardReconnecting\n* SHARD_READY: shardReady\n* SHARD_RESUME: shardResume\n* INVALIDATED: invalidated\n* RAW: raw\n* STAGE_INSTANCE_CREATE: stageInstanceCreate\n* STAGE_INSTANCE_UPDATE: stageInstanceUpdate\n* STAGE_INSTANCE_DELETE: stageInstanceDelete\n* GUILD_STICKER_CREATE: stickerCreate\n* GUILD_STICKER_DELETE: stickerDelete\n* GUILD_STICKER_UPDATE: stickerUpdate\n* GUILD_SCHEDULED_EVENT_CREATE: guildScheduledEventCreate\n* GUILD_SCHEDULED_EVENT_UPDATE: guildScheduledEventUpdate\n* GUILD_SCHEDULED_EVENT_DELETE: guildScheduledEventDelete\n* GUILD_SCHEDULED_EVENT_USER_ADD: guildScheduledEventUserAdd\n* GUILD_SCHEDULED_EVENT_USER_REMOVE: guildScheduledEventUserRemove",
      "type": [
        [
          ["Object", "<"],
          ["string", ", "],
          ["string", ">"]
        ]
      ],
      "meta": { "line": 130, "file": "Constants.js", "path": "src/util" }
    },
    {
      "name": "ShardEvents",
      "description": "The types of events emitted by a Shard:\n* CLOSE: close\n* DESTROYED: destroyed\n* INVALID_SESSION: invalidSession\n* READY: ready\n* RESUMED: resumed\n* ALL_READY: allReady",
      "type": [
        [
          ["Object", "<"],
          ["string", ", "],
          ["string", ">"]
        ]
      ],
      "meta": { "line": 304, "file": "Constants.js", "path": "src/util" }
    },
    {
      "name": "WSEventType",
      "description": "The type of a WebSocket message event, e.g. `MESSAGE_CREATE`. Here are the available events:\n* READY\n* RESUMED\n* APPLICATION_COMMAND_AUTOCOMPLETE_RESPONSE\n* APPLICATION_COMMAND_CREATE (deprecated)\n* APPLICATION_COMMAND_DELETE (deprecated)\n* APPLICATION_COMMAND_UPDATE (deprecated)\n* GUILD_CREATE\n* GUILD_DELETE\n* GUILD_UPDATE\n* INVITE_CREATE\n* INVITE_DELETE\n* GUILD_MEMBER_ADD\n* GUILD_MEMBER_REMOVE\n* GUILD_MEMBER_UPDATE\n* GUILD_MEMBERS_CHUNK\n* GUILD_INTEGRATIONS_UPDATE\n* GUILD_ROLE_CREATE\n* GUILD_ROLE_DELETE\n* GUILD_ROLE_UPDATE\n* GUILD_BAN_ADD\n* GUILD_BAN_REMOVE\n* GUILD_EMOJIS_UPDATE\n* CHANNEL_CREATE\n* CHANNEL_DELETE\n* CHANNEL_UPDATE\n* CHANNEL_PINS_UPDATE\n* MESSAGE_CREATE\n* MESSAGE_DELETE\n* MESSAGE_UPDATE\n* MESSAGE_DELETE_BULK\n* MESSAGE_REACTION_ADD\n* MESSAGE_REACTION_REMOVE\n* MESSAGE_REACTION_REMOVE_ALL\n* MESSAGE_REACTION_REMOVE_EMOJI\n* THREAD_CREATE\n* THREAD_UPDATE\n* THREAD_DELETE\n* THREAD_LIST_SYNC\n* THREAD_MEMBER_UPDATE\n* THREAD_MEMBERS_UPDATE\n* USER_UPDATE\n* PRESENCE_UPDATE\n* TYPING_START\n* VOICE_STATE_UPDATE\n* VOICE_SERVER_UPDATE\n* WEBHOOKS_UPDATE\n* INTERACTION_CREATE\n* STAGE_INSTANCE_CREATE\n* STAGE_INSTANCE_UPDATE\n* STAGE_INSTANCE_DELETE\n* GUILD_STICKERS_UPDATE\n* GUILD_SCHEDULED_EVENT_CREATE\n* GUILD_SCHEDULED_EVENT_UPDATE\n* GUILD_SCHEDULED_EVENT_DELETE\n* GUILD_SCHEDULED_EVENT_USER_ADD\n* GUILD_SCHEDULED_EVENT_USER_REMOVE",
      "see": ["{@link https://discord.com/developers/docs/topics/gateway#commands-and-events-gateway-events}"],
      "type": [[["string"]]],
      "meta": { "line": 323, "file": "Constants.js", "path": "src/util" }
    },
    {
      "name": "APIError",
      "description": "An error encountered while performing an API request. Here are the potential errors:\n* UNKNOWN_ACCOUNT\n* UNKNOWN_APPLICATION\n* UNKNOWN_CHANNEL\n* UNKNOWN_GUILD\n* UNKNOWN_INTEGRATION\n* UNKNOWN_INVITE\n* UNKNOWN_MEMBER\n* UNKNOWN_MESSAGE\n* UNKNOWN_OVERWRITE\n* UNKNOWN_PROVIDER\n* UNKNOWN_ROLE\n* UNKNOWN_TOKEN\n* UNKNOWN_USER\n* UNKNOWN_EMOJI\n* UNKNOWN_WEBHOOK\n* UNKNOWN_WEBHOOK_SERVICE\n* UNKNOWN_SESSION\n* UNKNOWN_BAN\n* UNKNOWN_SKU\n* UNKNOWN_STORE_LISTING\n* UNKNOWN_ENTITLEMENT\n* UNKNOWN_BUILD\n* UNKNOWN_LOBBY\n* UNKNOWN_BRANCH\n* UNKNOWN_STORE_DIRECTORY_LAYOUT\n* UNKNOWN_REDISTRIBUTABLE\n* UNKNOWN_GIFT_CODE\n* UNKNOWN_STREAM\n* UNKNOWN_PREMIUM_SERVER_SUBSCRIBE_COOLDOWN\n* UNKNOWN_GUILD_TEMPLATE\n* UNKNOWN_DISCOVERABLE_SERVER_CATEGORY\n* UNKNOWN_STICKER\n* UNKNOWN_INTERACTION\n* UNKNOWN_APPLICATION_COMMAND\n* UNKNOWN_APPLICATION_COMMAND_PERMISSIONS\n* UNKNOWN_STAGE_INSTANCE\n* UNKNOWN_GUILD_MEMBER_VERIFICATION_FORM\n* UNKNOWN_GUILD_WELCOME_SCREEN\n* UNKNOWN_GUILD_SCHEDULED_EVENT\n* UNKNOWN_GUILD_SCHEDULED_EVENT_USER\n* BOT_PROHIBITED_ENDPOINT\n* BOT_ONLY_ENDPOINT\n* CANNOT_SEND_EXPLICIT_CONTENT\n* NOT_AUTHORIZED\n* SLOWMODE_RATE_LIMIT\n* ACCOUNT_OWNER_ONLY\n* ANNOUNCEMENT_EDIT_LIMIT_EXCEEDED\n* CHANNEL_HIT_WRITE_RATELIMIT\n* SERVER_HIT_WRITE_RATELIMIT\n* CONTENT_NOT_ALLOWED\n* GUILD_PREMIUM_LEVEL_TOO_LOW\n* MAXIMUM_GUILDS\n* MAXIMUM_FRIENDS\n* MAXIMUM_PINS\n* MAXIMUM_RECIPIENTS\n* MAXIMUM_ROLES\n* MAXIMUM_USERNAMES\n* MAXIMUM_WEBHOOKS\n* MAXIMUM_EMOJIS\n* MAXIMUM_REACTIONS\n* MAXIMUM_CHANNELS\n* MAXIMUM_ATTACHMENTS\n* MAXIMUM_INVITES\n* MAXIMUM_ANIMATED_EMOJIS\n* MAXIMUM_SERVER_MEMBERS\n* MAXIMUM_NUMBER_OF_SERVER_CATEGORIES\n* GUILD_ALREADY_HAS_TEMPLATE\n* MAXIMUM_THREAD_PARTICIPANTS\n* MAXIMUM_NON_GUILD_MEMBERS_BANS\n* MAXIMUM_BAN_FETCHES\n* MAXIMUM_NUMBER_OF_UNCOMPLETED_GUILD_SCHEDULED_EVENTS_REACHED\n* MAXIMUM_NUMBER_OF_STICKERS_REACHED\n* MAXIMUM_PRUNE_REQUESTS\n* MAXIMUM_GUILD_WIDGET_SETTINGS_UPDATE\n* UNAUTHORIZED\n* ACCOUNT_VERIFICATION_REQUIRED\n* DIRECT_MESSAGES_TOO_FAST\n* REQUEST_ENTITY_TOO_LARGE\n* FEATURE_TEMPORARILY_DISABLED\n* USER_BANNED\n* TARGET_USER_NOT_CONNECTED_TO_VOICE\n* ALREADY_CROSSPOSTED\n* MISSING_ACCESS\n* INVALID_ACCOUNT_TYPE\n* CANNOT_EXECUTE_ON_DM\n* EMBED_DISABLED\n* CANNOT_EDIT_MESSAGE_BY_OTHER\n* CANNOT_SEND_EMPTY_MESSAGE\n* CANNOT_MESSAGE_USER\n* CANNOT_SEND_MESSAGES_IN_VOICE_CHANNEL\n* CHANNEL_VERIFICATION_LEVEL_TOO_HIGH\n* OAUTH2_APPLICATION_BOT_ABSENT\n* MAXIMUM_OAUTH2_APPLICATIONS\n* INVALID_OAUTH_STATE\n* MISSING_PERMISSIONS\n* INVALID_AUTHENTICATION_TOKEN\n* NOTE_TOO_LONG\n* INVALID_BULK_DELETE_QUANTITY\n* CANNOT_PIN_MESSAGE_IN_OTHER_CHANNEL\n* INVALID_OR_TAKEN_INVITE_CODE\n* CANNOT_EXECUTE_ON_SYSTEM_MESSAGE\n* CANNOT_EXECUTE_ON_CHANNEL_TYPE\n* INVALID_OAUTH_TOKEN\n* MISSING_OAUTH_SCOPE\n* INVALID_WEBHOOK_TOKEN\n* INVALID_ROLE\n* INVALID_RECIPIENTS\n* BULK_DELETE_MESSAGE_TOO_OLD\n* INVALID_FORM_BODY\n* INVITE_ACCEPTED_TO_GUILD_NOT_CONTAINING_BOT\n* INVALID_API_VERSION\n* FILE_UPLOADED_EXCEEDS_MAXIMUM_SIZE\n* INVALID_FILE_UPLOADED\n* GIFT_CODE_CLAIMED\n* CANNOT_SELF_REDEEM_GIFT\n* INVALID_GUILD\n* PAYMENT_SOURCE_REQUIRED\n* CANNOT_DELETE_COMMUNITY_REQUIRED_CHANNEL\n* INVALID_STICKER_SENT\n* INVALID_OPERATION_ON_ARCHIVED_THREAD\n* INVALID_THREAD_NOTIFICATION_SETTINGS\n* PARAMETER_EARLIER_THAN_CREATION\n* GUILD_NOT_AVAILABLE_IN_LOCATION\n* GUILD_MONETIZATION_REQUIRED\n* INSUFFICIENT_BOOSTS\n* INVALID_JSON\n* TWO_FACTOR_REQUIRED\n* INVALID_TWO_FACTOR_CODE\n* NO_USERS_WITH_DISCORDTAG_EXIST\n* REACTION_BLOCKED\n* RESOURCE_OVERLOADED\n* STAGE_ALREADY_OPEN\n* CANNOT_REPLY_WITHOUT_READ_MESSAGE_HISTORY_PERMISSION\n* MESSAGE_ALREADY_HAS_THREAD\n* THREAD_LOCKED\n* MAXIMUM_ACTIVE_THREADS\n* MAXIMUM_ACTIVE_ANNOUNCEMENT_THREADS\n* INVALID_JSON_FOR_UPLOADED_LOTTIE_FILE\n* UPLOADED_LOTTIES_CANNOT_CONTAIN_RASTERIZED_IMAGES\n* STICKER_MAXIMUM_FRAMERATE_EXCEEDED\n* STICKER_FRAME_COUNT_EXCEEDS_MAXIMUM_OF_1000_FRAMES\n* LOTTIE_ANIMATION_MAXIMUM_DIMENSIONS_EXCEEDED\n* STICKER_FRAME_RATE_IS_TOO_SMALL_OR_TOO_LARGE\n* STICKER_ANIMATION_DURATION_EXCEEDS_MAXIMUM_OF_5_SECONDS\n* CANNOT_UPDATE_A_FINISHED_EVENT\n* FAILED_TO_CREATE_STAGE_NEEDED_FOR_STAGE_EVENT",
      "see": ["{@link https://discord.com/developers/docs/topics/opcodes-and-status-codes#json-json-error-codes}"],
      "type": [[["string"]]],
      "meta": { "line": 443, "file": "Constants.js", "path": "src/util" }
    }
  ],
  "externals": [
    {
      "name": "APIError",
      "see": ["{@link https://discord.com/developers/docs/reference#error-messages}"],
      "meta": { "line": 94, "file": "DiscordAPIError.js", "path": "src/REST" }
    },
    {
      "name": "HTTPMethod",
      "see": ["{@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods}"],
      "meta": { "line": 316, "file": "RequestHandler.js", "path": "src/REST" }
    },
    {
      "name": "Response",
      "see": ["{@link https://developer.mozilla.org/en-US/docs/Web/API/Response}"],
      "meta": { "line": 321, "file": "RequestHandler.js", "path": "src/REST" }
    }
  ]
}
